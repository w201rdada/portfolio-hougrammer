[
["index.html", "W201 Portfolio Welcome! About the author", " W201 Portfolio David Hou MIDS Fall 2017 Welcome! Figure .: Hello World! Pariatur sapiente anim waistcoat bicycle rights. Cupidatat chambray portland direct trade, XOXO odio gochujang banjo deep v sustainable. Sint jianbing DIY humblebrag heirloom exercitation ennui fanny pack. Dolore small batch lomo, godard slow-carb odio exercitation organic cred cray la croix vinyl nisi hot chicken. Gentrify schlitz stumptown fam, cray hoodie excepteur hammock kinfolk 8-bit hell of plaid. Helvetica hashtag pinterest typewriter, tbh vape vero farm-to-table. Laboris bitters aliqua small batch. Figure .: Hello Benjamin Franklin! Abstract of my first cool idea Pop-up occupy labore, pug tofu nisi franzen YOLO tilde tumblr deep v nulla aliqua. Sapiente stumptown et lo-fi art party. Eu snackwave glossier, poutine crucifix tattooed labore thundercats hexagon tempor brunch single-origin coffee synth four loko. Velit beard ex etsy migas, tempor hashtag. Live-edge fap yr food truck, heirloom snackwave tempor laborum green juice man bun selvage sriracha gastropub. Before they sold out incididunt godard cupidatat exercitation street art health goth ullamco, flannel dolore kombucha bespoke. Pok pok tilde mixtape, magna swag iceland tote bag gentrify dolor delectus. Abstract of my second cool idea Vero dolor franzen letterpress. Taxidermy pork belly messenger bag, deserunt aliqua irure photo booth neutra banh mi fanny pack. Butcher fam heirloom marfa. Tilde reprehenderit snackwave tempor. Qui pop-up kitsch dolor. Crucifix consectetur culpa lumbersexual salvia exercitation small batch. Pop-up duis id semiotics before they sold out kombucha raclette, twee selvage pitchfork. Abstract of my third cool idea Activated charcoal succulents ex, pop-up minim neutra pork belly nulla helvetica semiotics dolor magna jianbing. Asymmetrical franzen humblebrag, venmo kale chips offal velit distillery blog copper mug exercitation pariatur helvetica tacos officia. Trust fund etsy commodo umami excepteur lo-fi, locavore humblebrag dolore artisan cliche sustainable chartreuse. Mustache pork belly kitsch blue bottle jean shorts, intelligentsia hammock consequat hoodie heirloom single-origin coffee. Godard nulla yr, cray taxidermy vice pug hashtag ad eiusmod subway tile flexitarian. Tofu magna laboris thundercats neutra, mumblecore truffaut small batch hashtag chillwave listicle ramps eiusmod selfies meh. Bushwick butcher cupidatat hella organic. About the author Sustainable aute gochujang, messenger bag vero dolor blog pork belly knausgaard. Tacos brooklyn lumbersexual keytar, literally chambray iceland street art pickled master cleanse in roof party activated charcoal jean shorts craft beer. Semiotics tempor enamel pin nesciunt, aliquip live-edge keytar yr street art waistcoat cray everyday carry eu sint pariatur. Aliquip anim godard leggings, flexitarian direct trade humblebrag. Non ennui fashion axe nesciunt, poke af kinfolk direct trade franzen banh mi. Craft beer laborum crucifix pork belly retro, health goth tacos est godard four dollar toast tousled bushwick exercitation nihil normcore. Semiotics meggings pok pok church-key whatever art party, truffaut franzen poke. Updated: 2018-04-26 "],
["DeepCAD.html", "1 Using Machine Learning for Mechanical Design 1.1 The (Non)Software Engineer 1.2 The Paradigm Shift 1.3 Old Dogs, New Tricks", " 1 Using Machine Learning for Mechanical Design Keywords mechanical design, computer aided design, CAD, machine learning, classification learning, neural networks 1.1 The (Non)Software Engineer In many ways, mechanical engineers are just glorified jigsaw puzzle solvers. Their job is to take from a virtually infinite number of puzzle pieces and put them together in a functional and cost-effective way–often times having to craft missing pieces from scratch. However, many puzzle pieces look relatively similar and it would be great if MEs had access to a repository of known puzzle-piece shapes rather than having to create every one from scratch. In modern companies, virtually all mechanical design work is done with computer aided design (CAD) software. Thus, physical objects are codified in digital files (see STL for example (STL (File Format) - Wikipedia 2018)). In what Anderson calls the “Petabyte Age” (Anderson 2008), computing power is approaching the ability to train a neural network to recognize geometries from solid model files and classify them. If an algorithm notices that every “car” I design needs a component called a “door”, it can learn what a “door” is and propose a design for me. Time between concept and production falls precipitously, with fewer engineers required. The implications for business/engineering environments are huge. 1.2 The Paradigm Shift The proposed machine learning algorithm is not a database of mechanical designs from which engineers select previously designed parts. The strength of ML lies not in its ability to regurgitate previous inputs, but rather in its ability to solve new problems. If the algorithm outputs a poor design, it can learn a better a solution. Once a neural net has seen enough examples of a particular geometry, it can propose solutions that the engineer hadn’t even thought of. Maybe putting hinges at the top of the door actually makes more sense than putting them on the side (a la gull-wing doors on the Tesla); maybe doors aren’t even necessary. Of course, building such a sophisticated learning algorithm will take time, with trial and error. The neural net’s capabilities must grow gradually, lest we attempt to build Rome in a day. I propose some checkpoints along the way: Component suggestion. The algorithm suggests previously designed components for use in the current design but actual implementation is left up to the engineer. Geometry suggestion. The algorithm suggests previously designed components as well as their geometry and layout in the current design. Design suggestion. The algorithm designs new geometry as a new solution for a specified problem. Level 1 is barely starting to emerge in some modern CAD packages, showing that development has already started on what Fuge calls “Computation Design Synthesis” (Fuge 2014). The above description of level 3 suggestion may not be very elucidating, but it is also the hardest one to encapsulate. The idea of “design suggestion” can be extended almost ad infinitum. It is perceivable (albeit far-fetched with contemporary technology) that this algorithm could advance one day to the point where an engineer can simply say, “design me an electric car,” and receive drawings for something akin to a Tesla. Perhaps a more realistic goal for advancements in my lifetime is this: a paradigm shift from explicitly telling CAD software what to draw (dimensioned sketches followed by extrudes, revolves, and sweeps) to simply giving a top level goal and allowing the software to figure out the details. This is analogous to imperative versus functional programming languages. Current mechanical design: chair = EmptyPart() chair.add(base) chair.add(back) for _ in range(4): chair.add(leg) return chair Designing with the new paradigm: return create(&#39;chair&#39;, options={base:1, back:1, leg:4}) 1.3 Old Dogs, New Tricks Adoption of such a new design paradigm into engineering workflow is a significant roadblock. The switching cost of just going from CAD package to CAD package is already high, requiring significant time to become proficient with the new software. Many mechanical engineers are older–median age in the US is 42.2 (Mechanical Engineers \\Textbar Data USA 2018)–and, as an ME in a Silicon Valley tech company, I have witnessed first-hand how difficult it is to get MEs to use new software. It will be difficult to get engineers to detail their design intents not only to their managers but also to a computer, with the latter often requiring more coddling than the former. A new question also emerges: “Who deserves the credit credit for an algorithmic design?” Is it the engineers who produced the inputs, the neural network designers, the end user, or someone else entirely? In addition, modern companies are very tight-lipped regarding their proprietary designs, so sharing across company borders may not happen any time soon. However, even for internal usage, adoption of ML-based mechanical design greatly reduces the need to resolve previous problems with existing solutions, leading to significant decreases in development time and cost. "],
["ML-Majors.html", "2 Using Machine Learning to Recommend Undergraduate Majors 2.1 The First Big Decision in Life 2.2 Like Netflix Recommendations But For School 2.3 Two Endings to the Story", " 2 Using Machine Learning to Recommend Undergraduate Majors Keywords education, majors, machine learning, recommender system 2.1 The First Big Decision in Life It is ludicrous that the American education system expects fresh high school graduates to possess enough foresight to make an accurate decision about a college major, which could dictate their entire careers. Many students (estimates range from 20 to 50 percent) choose to simply delay choice of major and enter college as undecided, with even more changing major at least once before leaving school (Gordon 1995). Changes in major are costly, both in money and time, with only 19 percent of students in 2014 completing their bachelor’s degree in four years (Lewin 2014). Even with a single concrete major, from admittance day to graduation day, students will not necessarily transition into a long and prosperous career in a related field. According to a 2013 Reuters’ poll, “only 14 percent of US workers believe they have have the perfect job and half want to change careers”. The same poll claims that a staggering 80 percent of workers in their 20s would like to change careers (Reuters 2013). Many young professionals find themselves unhappy with their choice of occupation and return to school for graduate studies. Wouldn’t it be nice if students had some guidance, early in their college careers, in choosing a major that is less likely to cause them turmoil throughout the remainder of their educational and vocational lives? 2.2 Like Netflix Recommendations But For School I propose we build a recommender system for college majors. Depending on a student’s academic background–i.e. performance in various classes–an algorithm can recommend field(s) of study, seeking to minimize the number of major changes and maximize future occupational satisfaction. Of these two cost function contributors, the former is easier to measure, but the latter may be much more useful. Operationalizing career satisfaction is difficult, but can be done through a combination of direct surveys on industry professionals and indirect measurements on metrics like turnover rate. Of course, academic background should not be the only factor in decision of a major. There are way more variables that influence career satisfaction than can be enumerated here (e.g. work-life balance, career stability, etc.). The most interesting inputs are aspects of student personality but are probably also the hardest ones to translate into a machine-readable representation. To truly gain insight into a student’s interests, we can tap into social media and web browsing behavior to create a profile of the student, similar to ones already built for targetted advertising. With the advent of deep learning, we can make such profiles sophisticated enough to recommend majors that the student never even considered. Many personality profile patterns are not even understandable to humans but can be represented as nodes in a neural network. The algorithm could predict major changes before they even enter the student’s mind. As an anecdotal aside, my roommate in college entered studying piano performance and left with a computer science degree. The drastic difference in the two areas of study meant that his graduation was delayed despite spending extra time and money making up classes each summer. A sophisticated machine learning algorithm can help predict which students are likely to make such a switch in major and short circuit the process altogether. It is important to point out that the algorithm should suggest majors best suited for the student and not ones with the hottest job markets. Websites like this one enumerate supposedly “best” jobs and even give satisfaction ratings. And perhaps those that are well-suited for the related fields of study on such lists really should aspire for these positions. However, besides the managerial positions, the list is heavily dominated by STEM fields due to the high salaries and number of openings. The algorithm should take more than these factors into account and not just suggest engineering as a major for everyone. We want the algorithm to figure out when a student would be truly suited to pursuing a degree in liberal arts, even if it means the job market is less than ideal. 2.3 Two Endings to the Story It is easy to imagine two diverging paths leading from the adoption of a major recommender algorithm: a dystopian one where machines dictate people’s positions in life and an (almost) utopian one where every person finds a truly fulfilling occupation. The key factor distinguishing the former from the latter is choice. The proposed algorithms are simply meant to be suggestions and it is ultimately up to students to make informed decisions with the tools available to them. For many students, major changes are not only inevitable but beneficial. College should be a time of exploration and many students need to study a variety of subjects to fully realize their future aspirations. However, it is undeniable that with each semester comes another tuition bill. Anything that can help optimize and shorten a student’s path to graduation should be considered. At the very least, we can help alleviate analysis paralysis for high school seniors who feel no excitement for any major. "],
["bibliography.html", "Bibliography", " Bibliography "]
]
